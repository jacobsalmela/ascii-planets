name: generate release
on:
  push:
    # Publish `master`
    branches:
      - master

    # Publish `v.x.x.x` tags as releases.
    tags:
      - v*

jobs:
  build:
    name: upload release asset
    runs-on: ubuntu-latest
    steps:
      - name: set up git repository
        uses: actions/checkout@v2

      - name: generate rules
        uses: xu-cheng/latex-action@v2
        with:
          root_file: rules.tex
          latexmk_use_xelatex: true

      - name: generate planet sheet
        uses: xu-cheng/latex-action@v2
        with:
          root_file: planet_sheet.tex
          latexmk_use_xelatex: true

      - name: generate planet sheet
        uses: xu-cheng/latex-action@v2
        with:
          root_file: planet_sheet.tex
          latexmk_use_xelatex: true

      - name: generate planet sheet in grayscale
        run: |
          sudo apt install ghostscript
          gs -sOutputFile=./planet_sheet_grayscale.pdf -sDEVICE=pdfwrite -sColorConversionStrategy=Gray -dProcessColorModel=/DeviceGray -dCompatibilityLevel=1.4 -dAutoRotatePages=/None -dNOPAUSE -dBATCH ./planet_sheet.pdf

      - name: upload pdf artifacts
        uses: actions/upload-artifact@v2
        with:
          name: ascii_planets
          path: ./*.pdf

      - name: adjust permissions
        run: |
          sudo chown -R $USER:$(id -gn $USER) ./

      - uses: actions/download-artifact@v2
        with:
          name: ascii_planets

      - name: Display structure of downloaded files
        run: ls -R

      - name: Build project # This would actually build your project, using zip for an example artifact
        run: |
          zip ascii_planets_${{ github.ref }}.zip --junk-paths planet_sheet.pdf planet_sheet_grayscale.pdf rules.pdf

      - name: create release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.AP_GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: ${{ github.ref }}
          draft: true
          prerelease: true

      - name: upload planet_sheet asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.AP_GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps
          asset_path: ./ascii_planets_${{ github.ref }}.zip
          asset_name: ascii_planets_${{ github.ref }}.zip
          asset_content_type: application/zip
